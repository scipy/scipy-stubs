[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "scipy-stubs"
version = "1.16.0.3.dev0"
description = "Type annotations for SciPy"
readme = "README.md"
authors = [
  { name = "Joren Hammudoglu", email = "jhammudoglu@gmail.com" },
]
maintainers = [
  { name = "Joren Hammudoglu", email = "jhammudoglu@gmail.com" },
  { name = "SciPy Developers", email = "scipy-dev@python.org" },
]
license = "BSD-3-Clause"
keywords = ["scipy", "typing", "stubs", "mypy", "pyright", "pep484", "pep561", "scipy-stubs"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Typing :: Stubs Only",
]
requires-python = ">=3.11"
dependencies = ["optype>=0.12.2"]

[project.optional-dependencies]
scipy = ["scipy>=1.16.0,<1.17"]

[project.urls]
Homepage = "https://scipy.org/"
Repository = "https://github.com/scipy/scipy-stubs/"
Issues = "https://github.com/scipy/scipy-stubs/issues"
Changelog = "https://github.com/scipy/scipy-stubs/releases"

[dependency-groups]
extras = ["scipy-stubs[scipy]"]
ci = ["packaging>=25.0"]
lint = [
  { include-group = "extras" },
  "dprint-py>=0.50.0.0",
  "ruff>=0.12.4",
  "sp-repo-review[cli]>=2025.5.2",
]
type = [
  { include-group = "extras" },
  { include-group = "ci" },
  "array-api-compat==1.12.0", # bundled as `scipy._lib.array_api_compat`
  "basedpyright>=1.31.0",
  "mypy>=1.17.0",
  "orjson>=3.11.0; python_version<'3.14'", # used by mypy
]
dev = [
  { include-group = "lint" },
  { include-group = "type" },
]

[tool.hatch.build]
packages = ["scipy-stubs"]

[tool.hatch.build.targets.sdist]
exclude = ["CODE_OF_CONDUCT.md", "README.md", "SECURITY.md", "uv.lock"]
force-include = { ".mypyignore" = ".mypyignore" } # for scipy-stubs-feedstock

[tool.poe.tasks.clean]
cmd = """
rm -rf
    scipy-stubs/**/*.pyc
    scipy-stubs/**/__pycache__
    scripts/*.pyc
    scripts/__pycache__
    tests/**/*.pyc
    tests/**/__pycache__
    ./**/.cache
    ./**/.mypy_cache
    ./**/.ruff_cache
    ./**/.tox
"""

[tool.poe.tasks.stubtest]
cmd = """
uv run --no-editable --reinstall-package=scipy-stubs
    stubtest --allowlist=.mypyignore $modules
"""
args = [{ name = "modules", positional = true, multiple = true, default = "scipy" }]

[tool.typos.files]
extend-exclude = ["*.pyi", ".mypyignore"]

[tool.typos.default]
extend-ignore-identifiers-re = ['ND|Nd']

[tool.mypy]
strict = true
strict_bytes = true

enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = false
warn_unused_ignores = true
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_expr = false
disallow_subclassing_any = false
# optype.numpy compat
always_true = ["NP125", "NP126", "NP20", "NP21", "NP22", "NP23"]

[tool.pyright]
ignore = [".venv"]
stubPath = "."
pythonPlatform = "All"
typeCheckingMode = "strict"
deprecateTypingAliases = true
enableReachabilityAnalysis = false
enableTypeIgnoreComments = false
reportCallInDefaultInitializer = true
reportImplicitOverride = true
reportImportCycles = true
reportMissingSuperCall = true
reportPropertyTypeMismatch = false
reportShadowedImports = true
reportUninitializedInstanceVariable = true
reportUnnecessaryTypeIgnoreComment = true
reportUnusedCallResult = true

# type-checkers should type-check; linters should lint
reportImplicitStringConcatenation = false
reportPrivateImportUsage = false
reportPrivateUsage = false

# basedpyright
failOnWarnings = true
reportIgnoreCommentWithoutRule = true
reportImplicitAbstractClass = false
reportImplicitRelativeImport = true
reportInvalidCast = true
reportPrivateLocalImportUsage = true
reportUnannotatedClassAttribute = false
strictGenericNarrowing = false

[[tool.pyright.executionEnvironments]]
root = "tests"
reportInvalidStubStatement = false
reportUnusedCallResult = false
reportUnusedExpression = false

[tool.pyright.defineConstant]
# optype.numpy compat
NP125 = true
NP126 = true
NP20 = true
NP21 = true
NP22 = true
NP23 = true

[tool.repo-review]
ignore = [
  "PY004", # no /docs
  "PY006", # pre-commit should not be used
  "PY007", # tox configured in tox.toml
  "PP301", # pytest is irrelevant
  "PC111", # no blacken-docs because markdown has no code
  "PC170", # no pygrep-hooks because no rST
  "RTD", # no RTD
]

[tool.ruff]
src = ["scipy-stubs", "scripts"]
extend-exclude = [".git", ".mypy_cache", ".tox", ".venv"]
force-exclude = true
# https://typing.python.org/en/latest/guides/writing_stubs.html#maximum-line-length
line-length = 130
preview = true

[tool.ruff.format]
line-ending = "lf"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D", "FBT", "ANN401", "COM812", "CPY", "EM", "TD", "FIX", "DOC"]

[tool.ruff.lint.per-file-ignores]
"*.pyi" = ["F", "E741", "N", "A", "PYI054", "PLC2701", "PLW3201", "PLR", "FURB"]

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["numpy", "numpy.typing", "optype", "optype.numpy", "optype.typing"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"ctypes" = "ct"
"datetime" = "dt"
"numpy" = "np"
"numpy.typing" = "npt"
"optype" = "op"
"optype.numpy" = "onp"
"optype.numpy.compat" = "npc"
"optype.typing" = "opt"

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
extra-standard-library = ["_typeshed", "typing_extensions"]
known-local-folder = ["scipy"]
split-on-trailing-comma = false

[tool.tox]
min_version = "4"
requires = ["tox-uv>=1"]
env_list = ["lint", "pyright", "mypy", "3.11", "3.12", "3.13", "3.14"]

[tool.tox.env_run_base]
description = "stubtest with {base_python}"
runner = "uv-venv-lock-runner"
dependency_groups = ["type"]
uv_sync_flags = ["--no-editable", "--reinstall-package=scipy-stubs"]
commands = [
  [
    "stubtest",
    "--allowlist=.mypyignore",
    { replace = "posargs", default = ["scipy"], extend = true },
  ],
]

[tool.tox.env.lint]
description = "lint"
runner = "uv-venv-lock-runner"
dependency_groups = ["lint"]
commands = [
  ["repo-review", "."],
  ["dprint", "check", "--incremental=false"],
  ["ruff", "check", "--show-fixes"],
  ["ruff", "format", "--check"],
]

[tool.tox.env.pyright]
description = "basedpyright"
runner = "uv-venv-lock-runner"
dependency_groups = ["type"]
commands = [["basedpyright"]]

[tool.tox.env.mypy]
description = "mypy"
runner = "uv-venv-lock-runner"
dependency_groups = ["type"]
commands = [
  [
    "mypy",
    "--hide-error-context",
    "--hide-error-code-links",
    "--no-incremental",
    { replace = "posargs", default = ["."], extend = true },
  ],
]
